#!/bin/bash
#
# vim: set ft=bash
set -e

find_dist_path()
{
  local target_file=$1
  cd `dirname $target_file`
  cd ..
  target_file=`basename $target_file`

  # Iterate down a (possible) chain of symlinks
  while [ -L "$target_file" ]
  do
    target_file=`readlink $target_file`
    cd `dirname $target_file`
    target_file=`basename $target_file`
  done

  result=`pwd -P`
  echo $result
}

#MAIN_DIR=$(find_dist_path ${BASH_SOURCE[0]})
MAIN_DIR=${BB_PATH}
load_files=(common.sh install.sh helpers.sh list.sh remove.sh usage.sh activate.sh test.sh fake.sh clean.sh unlock.sh)
for f in ${load_files[@]}; do source $MAIN_DIR/lib/$f; done

make_j=1
while getopts 'vhj:' OPTION
do
  case $OPTION in
    j)
      make_j=$OPTARG
      ;;
    v) 
      version
      ;;
    h)
      usage 0
      ;;
    ?)
      usage 1 "Option not supported."
      ;;
  esac 
done
shift $(($OPTIND - 1))


[[ $# -ne 1 && $# -ne 2 ]] && usage 1
action=$1
recipe=$2

# TODO: This hack is fragile. Would be 
#  great to make it a bit more robust
#
# This allows us to use the seed_name
# as a particular version and
# have multiple versions of these
# tools maintained in their
# recipe staging directory
LOG_DIR="$LOG_DIR/$recipe"
STAGE_DIR="$STAGE_DIR/$recipe"

case $action in
  "list")
    # TODO: See above hack. Need to reset LOG_DIR for list
    # to be able to pass in sub commands. fixme
    if [ ".$2" != "." ]
    then
      LOG_DIR=`dirname $LOG_DIR`
    fi
    bb_list $2
    ;;
  "install")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_install $recipe $make_j  
    ;;
  "remove")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_remove $recipe
    ;;
  "activate")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_activate $recipe
    ;;
  "test")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_test $recipe
    ;;
  "fake")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_fake $recipe
    ;;
  "clean")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_clean $recipe
    ;;
  "unlock")
    [ ".$recipe" == "." ] && error "I need a recipe name."
    bb_unlock $recipe
    ;;
  *)
    usage 1
    ;;
esac
